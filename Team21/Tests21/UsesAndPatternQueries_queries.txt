1 - TUPLE relationship(literal, literal) assignPattern(literal, literal)
assign a;
Select <a> such that Uses(1, "z") pattern a("x", "(z) + 1")
1
5000
2 - TUPLE relationship(literal, literal) assignPattern(literal, subexpression)
assign a;
Select <a> such that Uses("main", "g") pattern a("x", _"1"_)
1, 18, 30
5000
3 - BOOLEAN relationship(literal, literal) assignPattern(literal, wildcard)
assign a;
Select BOOLEAN such that Uses(1, "y") pattern a("x", _)
FALSE
5000
4 - ELEM relationship(literal, literal) assignPattern(synonym, literal)
assign a; variable v;
Select a such that Uses(6, "y") pattern a(v, "x + 1")
30
5000
5 - TUPLE relationship(literal, literal) assignPattern(synonym, subexpression)
assign a; variable v;
Select <a, v> such that Uses(6, "h") pattern a(v, _"1"_)
1 x, 2 y, 3 z, 4 a, 10 a, 18 x, 30 x
5000
6 - TUPLE relationship(literal, literal) assignPattern(synonym, wildcard)
assign a; variable v;
Select <a, v> such that Uses(6, "f") pattern a(v, _)
none
5000
7 - TUPLE relationship(literal, literal) assignPattern(wildcard, literal)
assign a;
Select <a> such that Uses("procX", "a") pattern a(_, "x + 1")
none
5000
8 - TUPLE relationship(literal, literal) assignPattern(wildcard, subexpression)
assign a; call c;
Select <a, c> such that Uses("procX", "h") pattern a(_, _"z"_)
1 7, 1 17, 2 7, 2 17, 3 7, 3 17, 4 7, 4 17, 10 7, 10 17
5000
9 - TUPLE relationship(literal, literal) assignPattern(wildcard, wildcard)
assign a;
Select <a> such that Uses("procX", "a") pattern a(_, _)
none
5000
10 - TUPLE relationship(literal, literal) whilePattern(synonym, wildcard)
while w; variable v;
Select <w, v> such that Uses(26, "y") pattern w(v, _)
9 x, 9 y, 23 x, 29 h
5000
11 - TUPLE relationship(literal, literal) whilePattern(wildcard, wildcard)
while w;
Select <w> such that Uses(27, "x") pattern w(_, _)
9, 23, 29
5000
12 - TUPLE relationship(literal, literal) ifPattern(synonym, wildcard, wildcard)
if i; variable v;
Select <i, v> such that Uses(25, "y") pattern i(v, _, _)
6 x, 13 g, 25 y, 27 z
5000
13 - TUPLE relationship(literal, literal) ifPattern(wildcard, wildcard, wildcard)
if i;
Select <i> such that Uses("procX", "g") pattern i(_, _, _)
none
5000
14 - TUPLE relationship(literal, synonym) assignPattern(literal, literal)
assign a; variable v;
Select <a, v> such that Uses(1, v) pattern a("x", "1")
18 z
5000
15 - TUPLE relationship(literal, synonym) assignPattern(literal, subexpression)
assign a; variable v;
Select <a, v> such that Uses(1, v) pattern a("x", _"1"_)
1 z, 18 z, 30 z
5000
16 - TUPLE relationship(literal, synonym) assignPattern(literal, wildcard)
assign a; variable v;
Select <a, v> such that Uses(13, v) pattern a("z", _)
3 g, 3 h, 20 g, 20 h
5000
17 - TUPLE relationship(literal, synonym) assignPattern(synonym, literal)
assign a; variable v;
Select <a, v> such that Uses("main", v) pattern a(v, "(z) + (1)")
1 x, 2 y, 3 z
5000
18 - TUPLE relationship(literal, synonym) assignPattern(synonym, subexpression)
assign a; variable v;
Select <a, v> such that Uses("main", v) pattern a(v, _"1"_)
1 x, 3 z, 18 x, 2 y, 30 x
5000
19 - TUPLE relationship(literal, synonym) assignPattern(synonym, wildcard)
assign a; variable v;
Select <a, v> such that Uses(23, v) pattern a(v, _)
3 z, 2 y, 30 x, 20 z, 19 y, 1 x, 18 x
5000
20 - BOOLEAN relationship(literal, synonym) assignPattern(wildcard, literal)
assign a; variable v;
Select BOOLEAN such that Uses(27, v) pattern a(_, "x + 1")
TRUE
5000
21 - ELEM relationship(literal, synonym) assignPattern(wildcard, subexpression)
assign a; variable v;
Select v such that Uses(25, v) pattern a(_, _"(((((((((((((((((((((((((1)))))))))))))))))))))))))"_)
y, z, h, x
5000
22 - TUPLE relationship(literal, synonym) assignPattern(wildcard, wildcard)
assign a; variable v; call c;
Select <a.stmt#, v, c.procName> such that Uses(29, v) pattern a(_, _)
1 x procX, 2 x procX, 3 x procX, 4 x procX, 10 x procX, 18 x procX, 19 x procX, 20 x procX, 21 x procX, 30 x procX, 1 h procX, 2 h procX, 3 h procX, 4 h procX, 10 h procX, 18 h procX, 19 h procX, 20 h procX, 21 h procX, 30 h procX
5000
23 - TUPLE relationship(literal, synonym) whilePattern(synonym, wildcard)
while w; variable v;
Select <w, v> such that Uses("main", v) pattern w(v, _)
9 x, 9 y, 23 x, 29 h
5000
24 - TUPLE relationship(literal, synonym) whilePattern(wildcard, wildcard)
while w; variable v;
Select <v> such that Uses("main", v) pattern w(_, _)
g, hello, h, z, y, x, bye
5000
25 - TUPLE relationship(literal, synonym) ifPattern(synonym, wildcard, wildcard)
if i; variable v;
Select <i, v> such that Uses(23, v) pattern i(v, _, _)
6 x, 25 y, 27 z
5000
26 - TUPLE relationship(literal, synonym) ifPattern(wildcard, wildcard, wildcard)
if i; variable v;
Select <v> such that Uses(6, v) pattern i(_, _, _)
x, y, z, h, bye, g
5000
27 - TUPLE relationship(synonym, literal) assignPattern(literal, literal)
assign a;
Select <a> such that Uses(a, "x") pattern a("x", "x + 1")
30
5000
28 - TUPLE relationship(synonym, literal) assignPattern(literal, subexpression)
assign a;
Select <a> such that Uses(a, "x") pattern a("x", _"1"_)
30
5000
29 - TUPLE relationship(synonym, literal) assignPattern(literal, wildcard)
assign a;
Select <a> such that Uses(a, "z") pattern a("a", _)
4, 10
5000
30 - TUPLE relationship(synonym, literal) assignPattern(synonym, literal)
assign a; variable v;
Select <a> such that Uses(a, "z") pattern a(v, "z + 1")
1, 2, 3, 4, 10
5000
31 - TUPLE relationship(synonym, literal) assignPattern(synonym, subexpression)
assign a; variable v;
Select <a, v> such that Uses(a, "z") pattern a(v, _"z"_)
1 x, 2 y, 3 z, 4 a, 10 a
5000
32 - TUPLE relationship(synonym, literal) assignPattern(synonym, wildcard)
assign a; variable v;
Select <a, v> such that Uses(a, "z") pattern a(v, _)
1 x, 2 y, 3 z, 4 a, 10 a
5000
35 - BOOLEAN relationship(synonym, literal) assignPattern(wildcard, wildcard)
assign a;
Select BOOLEAN such that Uses(a, "a") pattern a(_, _)
FALSE
5000
36 - TUPLE relationship(synonym, literal) whilePattern(synonym, wildcard)
while w; variable v;
Select <w, v> such that Uses(w, "y") pattern w(v, _)
9 x, 9 y, 23 x
5000
37 - ELEM relationship(synonym, literal) whilePattern(wildcard, wildcard)
while w;
Select w such that Uses(w, "y") pattern w(_, _)
9, 23
5000
38 - TUPLE relationship(synonym, literal) ifPattern(synonym, wildcard, wildcard)
if i; variable v;
Select <i, v> such that Uses(i, "bye") pattern i(v, _, _)
6 x
5000
39 - TUPLE relationship(synonym, literal) ifPattern(wildcard, wildcard, wildcard)
if i; variable v;
Select <i.stmt#> such that Uses(i, "z") pattern i(_, _, _)
6, 25, 27
5000
40 - TUPLE relationship(synonym, synonym) assignPattern(literal, literal)
assign a; variable v;
Select <a, v> such that Uses(a, v) pattern a("x", "x + 1")
30 x
5000
41 - TUPLE relationship(synonym, synonym) assignPattern(literal, subexpression)
assign a; variable v;
Select <a, v> such that Uses(a, v) pattern a("x", _"1"_)
1 z, 30 x
5000
42 - ELEM relationship(synonym, synonym) assignPattern(literal, wildcard)
assign a; variable v;
Select v such that Uses(a, v) pattern a("a", _)
z
5000
43 - TUPLE relationship(synonym, synonym) assignPattern(synonym, literal)
assign a; variable v;
Select <a, v> such that Uses(a, v) pattern a(v, "z + 1")
3 z
5000
44 - TUPLE relationship(synonym, synonym) assignPattern(synonym, subexpression)
assign a; variable v;
Select <a, v> such that Uses(a, v) pattern a(v, _"1"_)
3 z, 30 x
5000
45 - TUPLE relationship(synonym, synonym) assignPattern(synonym, wildcard)
assign a, a1; variable v;
Select <a, v> such that Uses(a1, v) pattern a(v, _)
1 x, 3 z, 18 x, 20 z, 30 x
5000
46 - TUPLE relationship(synonym, synonym) assignPattern(wildcard, literal)
assign a; variable v;
Select <a, v> such that Uses(a, v) pattern a(_, "z + 1")
10 z, 3 z, 2 z, 4 z, 1 z
5000
49 - TUPLE relationship(synonym, synonym) whilePattern(synonym, wildcard)
while w; variable v;
Select <w, v> such that Uses(w, v) pattern w(v, _)
9 x, 9 y, 23 x, 29 h
5000
50 - TUPLE relationship(synonym, synonym) whilePattern(wildcard, wildcard)
while w; variable v;
Select <v> such that Uses(w, v) pattern w(_, _)
x, y, z, h
5000
51 - TUPLE relationship(synonym, synonym) ifPattern(synonym, wildcard, wildcard)
if i; variable v;
Select <i, v> such that Uses(i, v) pattern i(v, _, _)
6 x, 13 g, 25 y, 27 z
5000
52 - TUPLE relationship(synonym, synonym) ifPattern(wildcard, wildcard, wildcard)
if i; variable v;
Select <v> such that Uses(i, v) pattern i(_, _, _)
x, y, z, g, h, bye
5000
