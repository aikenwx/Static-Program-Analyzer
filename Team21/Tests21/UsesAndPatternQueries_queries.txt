1 - TUPLE relationship(literal, literal) assignPattern(literal, literal)
assign a;
Select <a> such that Uses(1, "z") pattern a("x", "(z) + 1")
1
5000
2 - TUPLE relationship(literal, literal) assignPattern(literal, subexpression)
assign a;
Select <a> such that Uses("main", "g") pattern a("x", _"1"_)
1, 30
5000
3 - BOOLEAN relationship(literal, literal) assignPattern(literal, wildcard)
assign a;
Select BOOLEAN such that Uses(1, "y") pattern a("x", _)
FALSE
5000
4 - ELEM relationship(literal, literal) assignPattern(synonym, literal)
assign a; variable v;
Select a such that Uses(6, "y") pattern a(v, "x + 1")
30
5000
5 - TUPLE relationship(literal, literal) assignPattern(synonym, subexpression)
assign a; variable v;
Select <a, v> such that Uses(6, "h") pattern a(v, _"1"_)
1 x, 2 y, 3 z, 4 a, 10 a, 18 x, 30 x
5000
6 - TUPLE relationship(literal, literal) assignPattern(synonym, wildcard)
assign a; variable v;
Select <a, v> such that Uses(6, "f") pattern a(v, _)
None
5000
7 - TUPLE relationship(literal, literal) assignPattern(wildcard, literal)
assign a;
Select <a> such that Uses("procX", "a") pattern a(_, "x + 1")
None
5000
8 - TUPLE relationship(literal, literal) assignPattern(wildcard, subexpression)
assign a; call c;
Select <a, c> such that Uses("procX", "h") pattern a(_, _"z"_)
1 7, 1 17, 2 7, 2 17, 3 7, 3 17, 4 7, 4 17, 10 7, 10 17
5000
9 - TUPLE relationship(literal, literal) assignPattern(wildcard, wildcard)
assign a;
Select <a> such that Uses("procX", "a") pattern a(_, _)
None
5000
10 - TUPLE relationship(literal, literal) whilePattern(synonym, wildcard)
while w; variable v;
Select <w, v> such that Uses(26, "y") pattern w(v, _)
9 x, 9 y, 23 x, 29 h
5000
11 - TUPLE relationship(literal, literal) whilePattern(wildcard, wildcard)
while w;
Select <w> such that Uses(27, "x") pattern w(_, _)
9, 23, 29
5000
12 - TUPLE relationship(literal, literal) ifPattern(synonym, wildcard, wildcard)
if i; variable v;
Select <i, v> such that Uses(25, "y") pattern i(v, _, _)
6 x, 13 g, 25 y, 27 z
5000
13 - TUPLE relationship(literal, literal) ifPattern(wildcard, wildcard, wildcard)
if i;
Select <i> such that Uses("procX", "g") pattern i(_, _, _)
None
5000
14 - TUPLE relationship(literal, synonym) assignPattern(literal, literal)
assign a; variable v;
Select <a, v> such that Uses(1, v) pattern a("x", "1")
18 z
5000
15 - TUPLE relationship(literal, synonym) assignPattern(literal, subexpression)
assign a; variable v;
Select <a, v> such that Uses(1, v) pattern a("x", _"1"_)
1 z, 18 z, 30 z
5000
16 - TUPLE relationship(literal, synonym) assignPattern(literal, wildcard)
assign a; variable v;
Select <a, v> such that Uses(13, v) pattern a("z", _)
3 g, 3 h, 20 g, 20 h
5000
17 - TUPLE relationship(literal, synonym) assignPattern(synonym, literal)
assign a; variable v;
Select <a, v> such that Uses("main", v) pattern a(v, "(z) + (1)")
1 x, 2 y, 3 z
5000
18 - TUPLE relationship(literal, synonym) assignPattern(synonym, subexpression)
assign a; variable v;
Select <a, v> such that Uses("main", v) pattern a(v, _"1"_)
1 x, 3 z
5000
19 - TUPLE relationship(literal, synonym) assignPattern(synonym, wildcard)
assign a; variable v;
Select <a, v> such that Uses(23, v) pattern a(v, _)
30 x, 30 y, 30 z, 30 h
5000
20 - BOOLEAN relationship(literal, synonym) assignPattern(wildcard, literal)
assign a; variable v;
Select BOOLEAN such that Uses(27, v) pattern a(_, "x + 1")
TRUE
5000
21 - ELEM relationship(literal, synonym) assignPattern(wildcard, subexpression)
assign a; variable v;
Select v such that Uses(25, v) pattern a(_, _"(((((((((((((((((((((((((1)))))))))))))))))))))))))"_)
y, z, h, x
5000
22 - TUPLE relationship(literal, synonym) assignPattern(wildcard, wildcard)
assign a; variable v; stmt s;
Select <a, v, s> such that Uses(29, v) pattern a(_, _)
1 x 1, 2 x 1, 3 x 1, 4 x 1, 10 x 1, 18 x 1, 19 x 1, 20 x 1, 21 x 1, 30 x 1, 1 x 2, 2 x 2, 3 x 2, 4 x 2, 10 x 2, 18 x 2, 19 x 2, 20 x 2, 21 x 2, 30 x 2, 1 x 3, 2 x 3, 3 x 3, 4 x 3, 10 x 3, 18 x 3, 19 x 3, 20 x 3, 21 x 3, 30 x 3, 1 x 4, 2 x 4, 3 x 4, 4 x 4, 10 x 4, 18 x 4, 19 x 4, 20 x 4, 21 x 4, 30 x 4, 1 x 10, 2 x 10, 3 x 10, 4 x 10, 10 x 10, 18 x 10, 19 x 10, 20 x 10, 21 x 10, 30 x 10, 1 x 18, 2 x 18, 3 x 18, 4 x 18, 10 x 18, 18 x 18, 19 x 18, 20 x 18, 21 x 18, 30 x 18, 1 x 19, 2 x 19, 3 x 19, 4 x 19, 10 x 19, 18 x 19, 19 x 19, 20 x 19, 21 x 19, 30 x 19, 1 x 20, 2 x 20, 3 x 20, 4 x 20, 10 x 20, 18 x 20, 19 x 20, 20 x 20, 21 x 20, 30 x 20, 1 x 21, 2 x 21, 3 x 21, 4 x 21, 10 x 21, 18 x 21, 19 x 21, 20 x 21, 21 x 21, 30 x 21, 1 x 30, 2 x 30, 3 x 30, 4 x 30, 10 x 30, 18 x 30, 19 x 30, 20 x 30, 21 x 30, 30 x 30, 1 h 1, 2 h 1, 3 h 1, 4 h 1, 10 h 1, 18 h 1, 19 h 1, 20 h 1, 21 h 1, 30 h 1, 1 h 2, 2 h 2, 3 h 2, 4 h 2, 10 h 2, 18 h 2, 19 h 2, 20 h 2, 21 h 2, 30 h 2, 1 h 3, 2 h 3, 3 h 3, 4 h 3, 10 h 3, 18 h 3, 19 h 3, 20 h 3, 21 h 3, 30 h 3, 1 h 4, 2 h 4, 3 h 4, 4 h 4, 10 h 4, 18 h 4, 19 h 4, 20 h 4, 21 h 4, 30 h 4, 1 h 10, 2 h 10, 3 h 10, 4 h 10, 10 h 10, 18 h 10, 19 h 10, 20 h 10, 21 h 10, 30 h 10, 1 h 18, 2 h 18, 3 h 18, 4 h 18, 10 h 18, 18 h 18, 19 h 18, 20 h 18, 21 h 18, 30 h 18, 1 h 19, 2 h 19, 3 h 19, 4 h 19, 10 h 19, 18 h 19, 19 h 19, 20 h 19, 21 h 19, 30 h 19, 1 h 20, 2 h 20, 3 h 20, 4 h 20, 10 h 20, 18 h 20, 19 h 20, 20 h 20, 21 h 20, 30 h 20, 1 h 21, 2 h 21, 3 h 21, 4 h 21, 10 h 21, 18 h 21, 19 h 21, 20 h 21, 21 h 21, 30 h 21, 1 h 30, 2 h 30, 3 h 30, 4 h 30, 10 h 30, 18 h 30, 19 h 30, 20 h 30, 21 h 30, 30 h 30
5000
23 - TUPLE relationship(literal, synonym) whilePattern(synonym, wildcard)
while w; variable v;
Select <w, v> such that Uses("main", v) pattern w(v, _)
9 x, 9 y, 23 x, 29 h
5000
24 - TUPLE relationship(literal, synonym) whilePattern(wildcard, wildcard)
while w; variable v;
Select <v> such that Uses("main", v) pattern w(_, _)
8 x, 8 y, 8 z, 8 h, 9 x, 9 y, 9 z, 23 x, 23 y, 23 z, 29 x, 29 h
5000
25 - TUPLE relationship(literal, synonym) ifPattern(synonym, wildcard, wildcard)
if i; variable v;
Select <i, v> such that Uses(23, v) pattern i(v, _, _)
6 x, 25 y, 27 z
5000
26 - TUPLE relationship(literal, synonym) ifPattern(wildcard, wildcard, wildcard)
if i; variable v;
Select <v> such that Uses(6, v) pattern i(_, _, _)
x, y, z, h, bye
5000
27 - TUPLE relationship(synonym, literal) assignPattern(literal, literal)
assign a;
Select <a> such that Uses(a, "x") pattern a("x", "x + 1")
30
5000
28 - TUPLE relationship(synonym, literal) assignPattern(literal, subexpression)
assign a;
Select <a> such that Uses(a, "x") pattern a("x", _"1"_)
30
5000
29 - TUPLE relationship(synonym, literal) assignPattern(literal, wildcard)
assign a;
Select <a> such that Uses(a, "z") pattern a("a", _)
4, 10
5000
30 - TUPLE relationship(synonym, literal) assignPattern(synonym, literal)
assign a; variable v;
Select <a> such that Uses(a, "z") pattern a(v, "z + 1")
1, 2, 3, 4, 10
5000
31 - TUPLE relationship(synonym, literal) assignPattern(synonym, subexpression)
assign a; variable v;
Select <a, v> such that Uses(a, "z") pattern a(v, _"z"_)
1 x, 2 y, 3 z, 4 a, 10 a
5000
32 - TUPLE relationship(synonym, literal) assignPattern(synonym, wildcard)
assign a; variable v;
Select <a, v> such that Uses(a, "z") pattern a(v, _)
1 x, 2 y, 3 z, 4 a, 10 a
5000
35 - BOOLEAN relationship(synonym, literal) assignPattern(wildcard, wildcard)
assign a;
Select BOOLEAN such that Uses(a, "a") pattern a(_, _)
FALSE
5000
36 - TUPLE relationship(synonym, literal) whilePattern(synonym, wildcard)
while w; variable v;
Select <w, v> such that Uses(w, "y") pattern w(v, _)
9 x, 9 y, 23 x
5000
37 - ELEM relationship(synonym, literal) whilePattern(wildcard, wildcard)
while w;
Select v such that Uses(w, "y") pattern w(_, _)
9 x, 9 y, 23 x
5000
38 - TUPLE relationship(synonym, literal) ifPattern(synonym, wildcard, wildcard)
if i; variable v;
Select <i, v> such that Uses(i, "bye") pattern i(v, _, _)
6 x
5000
39 - TUPLE relationship(synonym, literal) ifPattern(wildcard, wildcard, wildcard)
if i; variable v;
Select <i, v> such that Uses(i, "z") pattern i(_, _, _)
6 x, 25 y, 27 z
5000
40 - TUPLE relationship(synonym, synonym) assignPattern(literal, literal)
assign a; variable v;
Select <a, v> such that Uses(a, v) pattern a("x", "x + 1")
30 x
5000
41 - TUPLE relationship(synonym, synonym) assignPattern(literal, subexpression)
assign a; variable v;
Select <a, v> such that Uses(a, v) pattern a("x", _"1"_)
1 z, 30 x
5000
42 - ELEM relationship(synonym, synonym) assignPattern(literal, wildcard)
assign a; variable v;
Select v such that Uses(a, v) pattern a("a", _)
z
5000
43 - TUPLE relationship(synonym, synonym) assignPattern(synonym, literal)
assign a; variable v;
Select <a, v> such that Uses(a, v) pattern a(v, "z + 1")
3 z
5000
44 - TUPLE relationship(synonym, synonym) assignPattern(synonym, subexpression)
assign a; variable v;
Select <a, v> such that Uses(a, v) pattern a(v, _"1"_)
3 z, 30 x
5000
45 - TUPLE relationship(synonym, synonym) assignPattern(synonym, wildcard)
assign a, a1; variable v;
Select <a, v> such that Uses(a1, v) pattern a(v, _)
1 x, 3 z, 30 x
5000
46 - TUPLE relationship(synonym, synonym) assignPattern(wildcard, literal)
assign a; variable v;
Select <a, v> such that Uses(a, v) pattern a(_, "z + 1")
1 x, 2 y, 3 z, 4 a, 10 a
5000
49 - TUPLE relationship(synonym, synonym) whilePattern(synonym, wildcard)
while w; variable v;
Select <w, v> such that Uses(w, v) pattern w(v, _)
9 x, 9 y, 23 x, 29 h
5000
50 - TUPLE relationship(synonym, synonym) whilePattern(wildcard, wildcard)
while w; variable v;
Select <v> such that Uses(w, v) pattern w(_, _)
x, y, z, h
5000
51 - TUPLE relationship(synonym, synonym) ifPattern(synonym, wildcard, wildcard)
if i; variable v;
Select <i, v> such that Uses(i, v) pattern i(v, _, _)
6 x, 13 g, 25 y, 27 z
5000
52 - TUPLE relationship(synonym, synonym) ifPattern(wildcard, wildcard, wildcard)
if i; variable v;
Select <v> such that Uses(i, v) pattern i(_, _, _)
x, y, z, g, h, bye
5000